version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
      - '8080:8080'
    environment:
      - NODE_ENV=production
      - PORT=3000
      - WS_PORT=8080
      - MONGODB_URI=mongodb://mongodb:27017/telegram-gifts
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ELASTICSEARCH_NODE=http://elasticsearch:9200
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - BOT_TOKEN=${BOT_TOKEN}
      - TON_CONNECT_API_KEY=${TON_CONNECT_API_KEY}
      - SENTRY_DSN=${SENTRY_DSN}
    depends_on:
      - mongodb
      - redis
      - elasticsearch
    volumes:
      - /app/node_modules
      - /app/logs
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: node src/workers/index.js
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/telegram-gifts
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
    depends_on:
      - mongodb
      - redis
    volumes:
      - /app/node_modules
      - /app/logs
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    restart: unless-stopped

  redis:
    image: redis:latest
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped

  elasticsearch:
    image: elasticsearch:7.17.0
    ports:
      - '9200:9200'
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: unless-stopped

  nginx:
    image: nginx:latest
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api
    restart: unless-stopped

volumes:
  mongodb_data:
  redis_data:
  elasticsearch_data: 